package main

import (
	"fmt"
	"io"
	"os"
	"path/filepath"
)

func main() {
	sourcePath := "/path/to/source" // Путь к исходной директории
	destinationPath := "/path/to/destination" // Путь к целевой директории

	err := filepath.Walk(sourcePath, func(path string, info os.FileInfo, err error) error {
		if err != nil {
			fmt.Println("Error accessing file:", err)
			return nil
		}

		relativePath, err := filepath.Rel(sourcePath, path)
		if err != nil {
			fmt.Println("Error getting relative path:", err)
			return nil
		}

		destination := filepath.Join(destinationPath, relativePath)

		if info.IsDir() {
			err := os.MkdirAll(destination, info.Mode())
			if err != nil {
				fmt.Println("Error creating directory:", err)
				return nil
			}
		} else {
			sourceFile, err := os.Open(path)
			if err != nil {
				fmt.Println("Error opening file:", err)
				return nil
			}
			defer sourceFile.Close()

			destinationFile, err := os.Create(destination)
			if err != nil {
				fmt.Println("Error creating file:", err)
				return nil
			}
			defer destinationFile.Close()

			_, err = io.Copy(destinationFile, sourceFile)
			if err != nil {
				fmt.Println("Error copying file:", err)
				return nil
			}
		}

		return nil
	})

	if err != nil {
		fmt.Println("Error:", err)
		return
	}

	fmt.Println("Folders copied successfully!")
}
